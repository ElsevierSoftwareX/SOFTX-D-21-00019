* DONE eliminare variabili globali
** come fare
- usando variabili statiche
- oppure passando parametri, definiti nel main (magari creare una struct network con tutti i nodi e i canali)
- vedi https://stackoverflow.com/questions/3208531/c-program-structure-avoiding-global-variables-includes-etc
** DONE creare struttura network da passare a funzioni 
- contiene anche faulty node probability
** DONE creare array payments da passare a funzioni
** DONE mettere riferimento a payment in event, anziche id del payment
** DONE creare struct simulation 
- contiene heap events, current time e  da passare a funzioni
* TODO input e output
** DONE configuration file per l'input
- file che definisce l'input, con coppie [is-preinput, 0], [channel-file, x.csv]
- fare formato json o csv
** TODO riscrivere  batch-means.py
- usare i for per calcolare le varie misure
- vedere se ci sono funzioni di numpy che direttamente calcolano varianza, media etc.
** TODO fare script che esegure direttamente cloth e batch-means.py
* DONE organizzare i file
** DONE modifica path dei file della topologia in initialize_topology_preproc
** DONE fare due cartelle: src, include
** DONE fare file cloth.c con main e altri oggetti del similatore (i/o,random generator)
** DONE fare file network.c dove ci sono i vari create_channel create_node
** DONE fare file payment.c
** DONE il file protocol.c diventa htlc.c
- cosi quando si vuole aggiungere nuovo protocollo si crea file separato new-protoco.c
** DONE global.h eliminato: i thread vanno in routing.h
** DONE routing.c
*** DONE spostare qui thread
*** DONE elimina dijkstra_p, che diventa dijkstra (i non-thread lo chiamano con indice 0)
* TODO connessione nodi
- usa algoritmo descritto qui https://medium.com/blockstream/letting-a-million-channels-bloom-985bdb28660b
* DONE cambio nomi variabili
** DONE camel case to snake case
** DONE channelInfo -> channel, channel->edge
*** DONE tipi
*** DONE nomi variabili
- provare con
 sed -i 's/channel/edge/g' main.c global.h simulator/* protocol/* utils/*
 sed -i 's/edge_info/channel/g' main.c global.h simulator/* protocol/* utils/*
** DONE peer->node, Node -> elemento della lista
** DONE togliere typedef e lasciare struct x
** DONE cambiare nomi campi in struct

* TODO other
** la capacity in input e' da esprimere in satoshi (poi nella funzione si moltiplica per 1000 per convertire in millisat)
** TODO latency non come attributo di channel ma come numero randomico
** exit(-1) in tutte le condizioni di errore (per es. in check_policy_forward)
- fai search di parola chiave "ERROR"
** rimuovere withholds R
** rimuovere gini
- oppure rifare in modo che non bisogna specificare i fondi *3
** ripensare a sigma_amount
** ripensare a uncoop_after_HTLC
** cancellare funzioni non utilizzate e commentate
* TODO test
* feedback federico
** cercare regexp per passare da snake a camel
** aspettare suo feedback
** prendere un tesista
* feedback antonio
** farlo fare a gdiba
** faccio io nel tempo perso
** aprire la tesi e standby
